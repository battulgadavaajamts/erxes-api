name: Api CI

on:
  push:
    branches:
      - "**"
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/api.yaml"
      - "!elkSyncer/**"
      - "!email-verifier/**"
      - "!engages-email-sender/**"
      - "!logger/**"
      - "!**.md"
      - "!base.Dockerfile"
      - "!base.Dockerfile.dockerignore"
  pull_request:
    branches:
      - master
      - develop
      - crons
      - workers
    paths:
      - "**"
      - "!.github/**"
      - ".github/workflows/api.yaml"
      - "!elkSyncer/**"
      - "!email-verifier/**"
      - "!engages-email-sender/**"
      - "!logger/**"
      - "!**.md"
      - "!base.Dockerfile"
      - "!base.Dockerfile.dockerignore"

jobs:
  api:
    runs-on: ubuntu-18.04

    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.18.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.18.x

      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-api-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-api-
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install

      - name: Build
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'push'
        run: |
          rm -rf node_modules
          yarn install --production
          yarn build
